<Window x:Class="T4LSystem.Sale.SaleOperationInterface"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T4LSystem.Sale"
        xmlns:model="clr-namespace:T4LSystemLibrary.VO;assembly=T4LSystemLibrary"
        xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Operação de Venda" Height="455.583" Width="947.395" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="roundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <model:ProductWithAmount/>
    </Window.DataContext>
    <Grid>
        <Rectangle Width="200" Height="375" HorizontalAlignment="Right" Margin="20" RadiusY="21" RadiusX="21">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF96E6E"/>
                    <GradientStop Color="#FF930404" Offset="1"/>
                    <GradientStop Color="#FFCD0C0C" Offset="0.5"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <TextBox Name="txtProductCode" HorizontalAlignment="Left" TabIndex="3" KeyDown="OnKeyDownHandlerProduct" Height="23" Margin="732,181,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="160"/>
        <Label Content="Código do Produto:" HorizontalAlignment="Left" Margin="732,157,0,0" VerticalAlignment="Top"/>
        <TextBox Name="txtProductAmount" HorizontalAlignment="Left" TabIndex="4" KeyDown="OnKeyDownHandlerAmount" Height="23" Margin="732,242,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="160"/>
        <Label Content="Quantidade:" HorizontalAlignment="Left" Margin="732,216,0,0" VerticalAlignment="Top"/>
        <DataGrid x:Name="dgdSaleList" 
                  AutoGenerateColumns="False" 
                  HorizontalAlignment="Left" 
                  CanUserResizeColumns="False" 
                  IsReadOnly="True" 
                  CanUserAddRows="False" 
                  GridLinesVisibility="Horizontal" 
                  Height="347" 
                  Margin="22,34,0,0" 
                  LoadingRow="DgdSaleList_LoadingRow"
                  VerticalAlignment="Top" Width="667"
                  Background="DarkRed"
                  Foreground="DarkRed">
            <DataGrid.Columns>
                <DataGridTextColumn
                    x:Name="DataGridCodeProduct"
                    Width="0.10*"
                    Header="Código"
                    Binding="{Binding Product.Cod}">
                </DataGridTextColumn>
                <DataGridTextColumn
                    x:Name="DataGridNameProduct"
                    Width="0.36*"
                    Header="Nome do Produto"
                    Binding="{Binding Product.Descricao}">
                </DataGridTextColumn>
                <DataGridTextColumn
                    x:Name="DataGridPriceProduct"
                    Width="0.21*"
                    Header="Preço do Produto"
                    Binding="{Binding Product.PrecoVenda}">
                </DataGridTextColumn>
                <DataGridTextColumn
                    x:Name="DataGridAmountProduct"
                    Width="0.13*"
                    Header="Quantidade"
                    Binding="{Binding Amount}">
                </DataGridTextColumn>
                <DataGridTextColumn
                    x:Name="DataGridTotalValueProduct"
                    Width="0.18*"
                    Header="Valor Total"
                    Binding="{Binding Total}">
                </DataGridTextColumn>
            </DataGrid.Columns>

        </DataGrid>
        <Label Content="Lista de produtos da venda:" HorizontalAlignment="Left" Margin="22,8,0,0" VerticalAlignment="Top"/>
        <Label Name="lblClientName" Content="Nome" HorizontalAlignment="Left" Margin="732,36,0,0" VerticalAlignment="Top"/>
        <Label Name="lblClientDocument" Content="CPF" HorizontalAlignment="Left" Margin="732,92,0,0" VerticalAlignment="Top"/>
        <Label Content="Valor Total da Venda: " HorizontalAlignment="Left" Margin="494,386,0,0" VerticalAlignment="Top"/>
        <Label Name="lblTotalValue" Content="0" HorizontalAlignment="Left" Margin="616,386,0,0" VerticalAlignment="Top" Width="73" Foreground="Green"/>
        <TextBox Name="txtClientName" TabIndex="1" HorizontalAlignment="Left" Height="23" Margin="732,58,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="160"/>
        <wpfx:MaskedTextBox Name="txtClientDocument" TabIndex="2" Height="30" Mask="000,000,000-00" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="732,120,0,0" Width="160"/>
        <Button Name="btnInsertSaleProduct" Content="Inserir Venda" HorizontalAlignment="Left" Margin="22,386,0,0" VerticalAlignment="Top" Width="135" Height="26" Click="BtnInserSaleProduct_Click"
                Background="DarkRed" Foreground="White" Style="{DynamicResource roundedButtonStyle}"/>
        <Label Content="Observações" HorizontalAlignment="Left" Margin="732,273,0,0" VerticalAlignment="Top"/>
        <TextBox Name="txtObservation" HorizontalAlignment="Left" Height="73" Margin="732,298,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="160"/>
    </Grid>
</Window>
